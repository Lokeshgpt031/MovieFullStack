# Workflow to build and deploy an ASP.Net Core app to Azure Web App - MoviesApi
# Documentation:
# - Azure Web Apps Deploy: https://github.com/Azure/webapps-deploy
# - More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - MoviesApi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      # Step 1: Check out the code
      - uses: actions/checkout@v4

      # Step 2: Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./MoviesApi/MoviesApi.sln

      # Step 4: Clean the project
      - name: Clean the project
        run: dotnet clean ./MoviesApi/MoviesApi.sln

      # Step 5: Build the project
      - name: Build with dotnet
        run: dotnet build ./MoviesApi/MoviesApi.sln --configuration Release 

      # Step 6: Publish the project
      - name: Publish with dotnet
        run: dotnet publish ./MoviesApi/MoviesApi.sln -c Release -o ${{env.DOTNET_ROOT}}/myapp

      # Step 7: Upload the build artifact
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT
      contents: read  # Required for actions/checkout

    steps:
      # Step 1: Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_81C6B44DAF2F4224A1E3EC098254B40B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BD5D1AB522FC474AB58E19D78EABCCDF }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E99E245FBE5145B2B9E3C3B3EC165E5F }}

      # Step 3: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MoviesApi'
          slot-name: 'Production'
          package: .
